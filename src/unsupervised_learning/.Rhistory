2.26893e-06 / 0.00374536
7.90902e-06  / 0.00374536
0.0194107 / 0.00734072
0.0179243/ 0.00734072
setwd("C:\\work\\internship\\COMP4710-Group-11\\src\\unsupervised_learning")
library("klaR")
kenya <- read.csv("../../KenyaData.csv", colClasses = "factor")
malawi <- read.csv("../../MalawiData.csv" , colClasses = "factor")
##apply k-mode or k-prototype clustering on the data
dim(kenya)
names(kenya)
#remove the first column in kenya dataset
kenya <- kenya[,-1]
#remove the living-with feature
kenya <- kenya[,-5]
symptoms <- kenya[,-c(1,2,3,4)]
freqs <- vector(mode = "numeric")
omit_vec <- vector(mode="numeric")
omit2 <- vector(mode="numeric")
for(i in 5:ncol(kenya)){
summ <- sum(as.numeric(as.character(kenya[,i])))
#print( summ )
freqs <- append(freqs, summ )
if( summ == 0 ){
omit_vec <- append(omit_vec, i)
}
if(summ <= 31){ ##threshold: %5
omit2 <- append(omit2, i)
}
}
omit_vec
omit2
summary(freqs)
boxplot(freqs)
print(freqs[order(freqs)])
# plot the frequencies bar
df <- data.frame(frqs=freqs, percent=freqs/nrow(kenya))
row.names(df) <- names(kenya)[-(1:4)]
df <- df[order(df[,2]),]
barplot(df[,1])
## remove those features that have 0 cases (or more cases is proper like <= 5% of the all cases)
kenya1 <- kenya[,-omit_vec]
kenya2 <- kenya[,-omit2]
## PLAN of next-step-work:
# now it seems ten clusters are good (a good kink point)
#weighted: whether the features is weighted by its frequency
result <- kmodes(kenya2, 10, iter.max = 200, weighted = FALSE)
print(result)
## make combination of age/gender, make vector of [freq1, freq2, ...], then do the spectrum analysis cosine/
## there are 2 * 3 = 6 combinations of age/gender
dff <- kenya2
dff$age_gender <- paste(dff$Age, dff$Gender, sep="_")
View(dff)
unique(dff$age_gender)
table(dff$age_gender)
subtypes <- unique(dff$age_gender)
all_sigs <- list()
i=1
tmp <- dff[dff$age_gender == subtypes[i],]
View(tmp)
tmp_freqs <- vector(mode="numeric")
for(j in 5:19){
tmp_freqs <- append(tmp_freqs, mean(as.numeric(as.character(tmp[,j]))))
}
tmp_freqs
all_sigs <- list()
for(i in 1:length(subtypes)){
tmp <- dff[dff$age_gender == subtypes[i],]
tmp_freqs <- vector(mode="numeric")
for(j in 5:19){
tmp_freqs <- append(tmp_freqs, mean(as.numeric(as.character(tmp[,j]))))
all_sigs <- append(all_sigs, tmp_freqs)
}
}
all_sigs
all_sigs <- list()
for(i in 1:length(subtypes)){
tmp <- dff[dff$age_gender == subtypes[i],]
tmp_freqs <- vector(mode="numeric")
for(j in 5:19){
tmp_freqs <- append(tmp_freqs, mean(as.numeric(as.character(tmp[,j]))))
all_sigs <- append(all_sigs, list(tmp_freqs))
}
}
all_sigs
all_sigs[[1]]
all_sigs[[2]]
all_sigs[[3]]
all_sigs <- list()
for(i in 1:length(subtypes)){
tmp <- dff[dff$age_gender == subtypes[i],]
tmp_freqs <- vector(mode="numeric")
for(j in 5:19){
tmp_freqs <- append(tmp_freqs, mean(as.numeric(as.character(tmp[,j]))))
}
all_sigs <- append(all_sigs, list(tmp_freqs))
}
all_sigs
all_sigs <- matrix(NA, nrow=0, ncol=15)
all_sigs <- matrix(NA, nrow=0, ncol=15)
for(i in 1:length(subtypes)){
tmp <- dff[dff$age_gender == subtypes[i],]
tmp_freqs <- vector(mode="numeric")
for(j in 5:19){
tmp_freqs <- append(tmp_freqs, mean(as.numeric(as.character(tmp[,j]))))
}
all_sigs <- rbind(all_sigs, tmp_freqs)
}
all_sigs
colnames(all_sigs) <- names(kenya2)[5:19]
row.names(all_sigs) <- subtypes
View(all_sigs)
[1,2] * [2,3]
vec1 = c(1,2)
vec2 = c(2,3)
vec1 * vec2
vec1 ^2
vec2 ^2
#cosine similarity between two vectors
cosine_sim <- function(vec1, vec2){
dot_prod <- sum(vec1 * vect2)
norm1 <- sqrt(sum(vec1^2))
norm2 <- sqrt(sum(vec2^2))
return(dot_prod / (norm1 * norm2))
}
## heatmap, cosine-similarity matrix for the 6 subtypes
sim_matr <- matrix(0, nrow = 6, ncol = 6)
## heatmap, cosine-similarity matrix for the 6 subtypes
sim_matr <- matrix(0, nrow = 6, ncol = 6)
for(i in 1:6){
vec1 <- all_sigs[i,]
for(j in 1:6){
vec2 <- all_sigs[j,]
sim <- cosine_sim(vec1, vec2)
sim_matr[i][j] = sim
}
}
#cosine similarity between two vectors
cosine_sim <- function(vec1, vec2){
dot_prod <- sum(vec1 * vec2)
norm1 <- sqrt(sum(vec1^2))
norm2 <- sqrt(sum(vec2^2))
return(dot_prod / (norm1 * norm2))
}
## heatmap, cosine-similarity matrix for the 6 subtypes
sim_matr <- matrix(0, nrow = 6, ncol = 6)
for(i in 1:6){
vec1 <- all_sigs[i,]
for(j in 1:6){
vec2 <- all_sigs[j,]
sim <- cosine_sim(vec1, vec2)
sim_matr[i][j] = sim
}
}
warnings()
vec1
## heatmap, cosine-similarity matrix for the 6 subtypes
sim_matr <- matrix(0, nrow = 6, ncol = 6)
for(i in 1:6){
vec1 <- t(all_sigs[i,])
for(j in 1:6){
vec2 <- t(all_sigs[j,])
sim <- cosine_sim(vec1, vec2)
sim_matr[i][j] = sim
}
}
i=1
j=1
vec1 <- t(all_sigs[i,])
vec1
dot_prod <- sum(vec1 * vec2)
norm1 <- sqrt(sum(vec1^2))
norm2 <- sqrt(sum(vec2^2))
sim <- cosine_sim(vec1, vec2)
sim
vec1
vec2
## heatmap, cosine-similarity matrix for the 6 subtypes
sim_matr <- matrix(0, nrow = 6, ncol = 6)
for(i in 1:6){
vec1 <- t(all_sigs[i,])
for(j in 1:6){
vec2 <- t(all_sigs[j,])
sim <- cosine_sim(vec1, vec2)
sim_matr[i,j] = sim
}
}
View(sim_matr)
row.names(sim_matr) <- subtypes
colnames(sim_matr) <- subtypes
## are there gender difference? chi-square test
gender_d <- matrix(0, nrow=2, ncol=15)
## are there gender difference? chi-square test
gender_d <- matrix(0, nrow=2, ncol=15)
for(i in 1:nrow(kenya2)){
gg <- kenya2$Gender[i]
for(j in 5:19){
if(gg == "Female"){
gender_d[0,j] = gender_d[0,j] + kenya2[i,j]
}else{
gender_d[1,j] = gender_d[1,j] + kenya2[i,j]
}
}
}
## are there gender difference? chi-square test
gender_d <- matrix(0, nrow=2, ncol=15)
for(i in 1:nrow(kenya2)){
gg <- kenya2$Gender[i]
for(j in 5:19){
if(gg == "Female"){
gender_d[0,j-4] = gender_d[0,j-4] + kenya2[i,j]
}else{
gender_d[1,j-4] = gender_d[1,j-4] + kenya2[i,j]
}
}
}
warnings()
## are there gender difference? chi-square test
gender_d <- matrix(0, nrow=2, ncol=15)
for(i in 1:nrow(kenya2)){
gg <- kenya2$Gender[i]
value <- as.numeric(as.character(kenya2[i,j]))
for(j in 5:19){
if(gg == "Female"){
gender_d[0,j-4] =  gender_d[0,j-4] + value
}else{
gender_d[1,j-4] = gender_d[1,j-4] + value
}
}
}
View(gender_d)
## are there gender difference? chi-square test
gender_d <- matrix(0, nrow=2, ncol=15)
for(i in 1:nrow(kenya2)){
gg <- as.character( kenya2$Gender[i] )
value <- as.numeric(as.character(kenya2[i,j]))
for(j in 5:19){
if(gg == "Female"){
gender_d[0,j-4] =  gender_d[0,j-4] + value
}else{
gender_d[1,j-4] = gender_d[1,j-4] + value
}
}
}
## are there gender difference? chi-square test
gender_d <- matrix(0, nrow=2, ncol=15)
for(i in 1:nrow(kenya2)){
gg <- as.character( kenya2$Gender[i] )
value <- as.numeric(as.character(kenya2[i,j]))
for(j in 5:19){
if(gg == "Female"){
print("femal")
gender_d[0,j-4] =  gender_d[0,j-4] + value
}else{
print("male")
gender_d[1,j-4] = gender_d[1,j-4] + value
}
}
}
## are there gender difference? chi-square test
gender_d <- matrix(0, nrow=2, ncol=15)
for(i in 1:nrow(kenya2)){
gg <- as.character( kenya2$Gender[i] )
value <- as.numeric(as.character(kenya2[i,j]))
for(j in 5:19){
if(gg == "Female"){
print("femal")
print(value)
gender_d[0,j-4] =  gender_d[0,j-4] + value
}else{
print("male")
gender_d[1,j-4] = gender_d[1,j-4] + value
}
}
}
## are there gender difference? chi-square test
gender_d <- matrix(0, nrow=2, ncol=15)
for(i in 1:nrow(kenya2)){
gg <- as.character( kenya2$Gender[i] )
value <- as.numeric(as.character(kenya2[i,j]))
for(j in 5:19){
if(gg == "Female"){
print("femal")
print(value)
gender_d[1,j-4] =  gender_d[1,j-4] + value
}else{
print("male")
gender_d[2,j-4] = gender_d[2,j-4] + value
}
}
}
View(gender_d)
## are there gender difference? chi-square test
gender_d <- matrix(0, nrow=2, ncol=15)
for(i in 1:nrow(kenya2)){
gg <- as.character( kenya2$Gender[i] )
for(j in 5:19){
value <- as.numeric(as.character(kenya2[i,j]))
if(gg == "Female"){
print("femal")
print(value)
gender_d[1,j-4] =  gender_d[1,j-4] + value
}else{
print("male")
gender_d[2,j-4] = gender_d[2,j-4] + value
}
}
}
dimnames(gender_d) <- list(gender=c("F", "M"),
symptoms=names(kenya2)[5:19])
xsq <- chisq.test(gender_d)
summary(xsq)
xsq$p.value
## group signature similarity matrix; given some .. states, the probability of developing
## the group-related signature symptoms is:
result <- kmodes(kenya2, 10, iter.max = 200, weighted = FALSE) #or true??
print(result)
## group signature similarity matrix; given some .. states, the probability of developing
## the group-related signature symptoms is:
result <- kmodes(kenya2, 10, iter.max = 200, weighted = TRUE) #or true??
print(result)
View(kenya2)
wss <- sapply(1:20, function(k){
sum(kmodes(kenya2[,-c(1:4)], k, iter.max = 200, weighted = FALSE)$withindiff)
})
plot(1:20, wss, type="b", pch = 19, frame = FALSE,
xlab="Number of clusters K",
ylab="Total within-clusters sum of squares" )
## group signature similarity matrix; given some .. states, the probability of developing
## the group-related signature symptoms is:
result <- kmodes(kenya2[-c(1:4)], 9, iter.max = 200, weighted = FALSE) #or true??
print(result)
## checking the overlapping:
result$cluster
View(dff)
## checking the overlapping:
clus_matr <- matrix(0, nrow=9, ncol=6)
result$cluster
i=0
subtypes == dff$age_gender[i]
which(subtypes == dff$age_gender[i])
dff$age_gender[i]
i=1
dff$age_gender[i]
which(subtypes == dff$age_gender[i])
subtypes
## checking the overlapping:
clus_matr <- matrix(0, nrow=9, ncol=6)
result$cluster
#result$cluster
for(i in 1:nrow(kenya2)){
cluster <- result$cluster[i]
col <- which(subtypes == dff$age_gender[i])
clus_matr[cluster,col] = clus_matr[cluster,col] + 1
}
View(clus_matr)
colnames(clus_matr) <- subtypes
table(dff$age_gender)
## group signature similarity matrix; given some .. states, the probability of developing
## the group-related signature symptoms is:
result <- kmodes(kenya2[-c(1:4)], 2, iter.max = 200, weighted = FALSE) #or true??
#print(result)
result$cluster
View(dff)
## checking the overlapping:
subtypes2 <- unique(dff$Age)
## checking the overlapping:
subtypes2 <- unique(as.character(dff$Age))
## checking the overlapping:
subtypes2 <- unique(as.character(dff$Age))
clus_matr <- matrix(0, nrow=2, ncol=3)
#result$cluster
for(i in 1:nrow(kenya2)){
cluster <- result$cluster[i]
col <- which(subtypes2 == dff$Age[i])
clus_matr[cluster,col] = clus_matr[cluster,col] + 1
}
colnames(clus_matr) <- subtypes2
## group signature similarity matrix; given some .. states, the probability of developing
## the group-related signature symptoms is:
result <- kmodes(kenya2[-c(1:4)], 2, iter.max = 200, weighted = TRUE) #or true??
#print(result)
result$cluster
## checking the overlapping:
subtypes2 <- unique(as.character(dff$Age))
clus_matr <- matrix(0, nrow=2, ncol=3)
#result$cluster
for(i in 1:nrow(kenya2)){
cluster <- result$cluster[i]
col <- which(subtypes2 == dff$Age[i])
clus_matr[cluster,col] = clus_matr[cluster,col] + 1
}
colnames(clus_matr) <- subtypes2
