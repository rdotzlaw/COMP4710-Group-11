tab <-  cbind(df2[,i], nums-df2[,i])
names(tab) <- c("has_symp", "not_have")
xsq <- chisq.test(tab)
pvalues <- append(pvalues, xsq$p.value)
}
return(pvalues)
}
age_res <- bar_plot(age_df, "age") #<=50 and >50
print(age_res[[1]])
gender_res <- bar_plot(gender_df, "gender") #male and female
country_res <- bar_plot(country_df, "country")
live_tp_res <- bar_plot(live_tp_df, "living_type")
employ_res <- bar_plot(employ_df, "employed")
live_with_res <- bar_plot(live_with_df, "living_with")
grid.arrange(age_res[[1]], gender_res[[1]], country_res[[1]],  employ_res[[1]], live_with_res[[1]],live_tp_res[[1]], ncol=2)
df <- live_with_df
#df <- age_df
unames <- unique(as.character(df[,1]))
nums <- vector(mode="numeric")
for(i in 1:length(unames)){
nums <- append(nums, length(which(df[,1]==unames[i])))
}
df2 <- matrix(0, nrow=length(unames), ncol=32)
for(i in 1:nrow(df)){
for(j in 2:ncol(df)){
value <- as.numeric(as.character(df[i,j]))
index <- which(unames == as.character(df[i,1]) )
df2[index, j-1] = df2[index, j-1] + value
}
}
row.names(df2) <- unames
colnames(df2) <- names(df)[2:33]
#compute the chi-square statistics
chi_res <- chi_test(df2, nums)
#xx <- table(as.character(df[,1]))
for(i in 1:nrow(df2)){
df2[i,] <- df2[i,]/nums[i]
}
df2 <- t(df2)
df2 <- cbind(df2, chi_res)
View(live_with_df)
live_with_df <- kenya1[!is.na(kenya1$Living.With), -c(1,2,3,4,5, 9)]
live_with_res <- bar_plot(live_with_df, "living_with")
grid.arrange(age_res[[1]], gender_res[[1]], country_res[[1]],  employ_res[[1]], live_with_res[[1]],live_tp_res[[1]], ncol=2)
df <- live_with_df
#df <- age_df
unames <- unique(as.character(df[,1]))
nums <- vector(mode="numeric")
for(i in 1:length(unames)){
nums <- append(nums, length(which(df[,1]==unames[i])))
}
df2 <- matrix(0, nrow=length(unames), ncol=32)
for(i in 1:nrow(df)){
for(j in 2:ncol(df)){
value <- as.numeric(as.character(df[i,j]))
index <- which(unames == as.character(df[i,1]) )
df2[index, j-1] = df2[index, j-1] + value
}
}
row.names(df2) <- unames
colnames(df2) <- names(df)[2:33]
#compute the chi-square statistics
chi_res <- chi_test(df2, nums)
#xx <- table(as.character(df[,1]))
for(i in 1:nrow(df2)){
df2[i,] <- df2[i,]/nums[i]
}
df2 <- t(df2)
df2 <- cbind(df2, chi_res)
df2 <- df2[order(df2[,ncol(df2)], decreasing = FALSE),]
df2 <- as.data.frame(df2)
df2$symptom <- row.names(df2)
df2 <- df2[df2$chi_res <= 0.05,]
df2 <- matrix(0, nrow=length(unames), ncol=32)
for(i in 1:nrow(df)){
for(j in 2:ncol(df)){
value <- as.numeric(as.character(df[i,j]))
index <- which(unames == as.character(df[i,1]) )
df2[index, j-1] = df2[index, j-1] + value
}
}
row.names(df2) <- unames
colnames(df2) <- names(df)[2:33]
#compute the chi-square statistics
chi_res <- chi_test(df2, nums)
#xx <- table(as.character(df[,1]))
for(i in 1:nrow(df2)){
df2[i,] <- df2[i,]/nums[i]
}
df2 <- t(df2)
df2 <- cbind(df2, chi_res)
df2 <- matrix(0, nrow=length(unames), ncol=ncol(df)-1)
for(i in 1:nrow(df)){
for(j in 2:ncol(df)){
value <- as.numeric(as.character(df[i,j]))
index <- which(unames == as.character(df[i,1]) )
df2[index, j-1] = df2[index, j-1] + value
}
}
row.names(df2) <- unames
colnames(df2) <- names(df)[2:ncol(df)]
#compute the chi-square statistics
chi_res <- chi_test(df2, nums)
#xx <- table(as.character(df[,1]))
for(i in 1:nrow(df2)){
df2[i,] <- df2[i,]/nums[i]
}
df2 <- t(df2)
df2 <- cbind(df2, chi_res)
df2 <- df2[order(df2[,ncol(df2)], decreasing = FALSE),]
df2 <- as.data.frame(df2)
df2$symptom <- row.names(df2)
df2 <- df2[df2$chi_res <= 0.05,]
df3 <- reshape(df2, direction = "long", varying = list(1:length(nums) ),
idvar = names(df2)[ncol(df2)], timevar = label,
times=names(df2)[ c(1:length(nums)) ], v.names = "percentage" )
bar_plot <- function(df, label){
#df <- age_df
unames <- unique(as.character(df[,1]))
nums <- vector(mode="numeric")
for(i in 1:length(unames)){
nums <- append(nums, length(which(df[,1]==unames[i])))
}
df2 <- matrix(0, nrow=length(unames), ncol=ncol(df)-1)
for(i in 1:nrow(df)){
for(j in 2:ncol(df)){
value <- as.numeric(as.character(df[i,j]))
index <- which(unames == as.character(df[i,1]) )
df2[index, j-1] = df2[index, j-1] + value
}
}
row.names(df2) <- unames
colnames(df2) <- names(df)[2:ncol(df)]
#compute the chi-square statistics
chi_res <- chi_test(df2, nums)
#xx <- table(as.character(df[,1]))
for(i in 1:nrow(df2)){
df2[i,] <- df2[i,]/nums[i]
}
df2 <- t(df2)
df2 <- cbind(df2, chi_res)
#df2 <- cbind(df2, c(1:32))
#df2[,3] <- abs( df2[,1] - df2[,2] )
df2 <- df2[order(df2[,ncol(df2)], decreasing = FALSE),]
df2 <- as.data.frame(df2)
df2$symptom <- row.names(df2)
df2 <- df2[df2$chi_res <= 0.05,]
df3 <- reshape(df2, direction = "long", varying = list(1:length(nums) ),
idvar = names(df2)[ncol(df2)], timevar = label,
times=names(df2)[ c(1:length(nums)) ], v.names = "percentage" )
df3$symptom <- factor(df3$symptom, levels = unique(df3$symptom))
pic <- ggplot(data=df3, aes(x=symptom, y=percentage, fill=factor(df3[,3]), )) +
geom_bar(position="dodge",stat="identity") +
coord_flip() +
ggtitle( paste("","symptoms percentage") ) +
theme_bw() +
scale_x_discrete(
limits=unique(df2$symptom),
labels=unique(df2$symptom)
)  +
scale_fill_discrete(
name=label,
labels= names(df2)[c(1:length(nums))]
) +
theme(
#legend.position=c(.83,.3),
axis.title.y=element_blank(),
text=element_text(family="serif",size=15),
plot.title=element_text(face="bold",hjust=0.5)
)
return(list(pic, df2))
}
live_with_res <- bar_plot(live_with_df, "living_with")
grid.arrange(age_res[[1]], gender_res[[1]], country_res[[1]],  employ_res[[1]], live_with_res[[1]],live_tp_res[[1]], ncol=2)
View(df2)
bar_plot <- function(df, label){
#df <- age_df
unames <- unique(as.character(df[,1]))
nums <- vector(mode="numeric")
for(i in 1:length(unames)){
nums <- append(nums, length(which(df[,1]==unames[i])))
}
df2 <- matrix(0, nrow=length(unames), ncol=ncol(df)-1)
for(i in 1:nrow(df)){
for(j in 2:ncol(df)){
value <- as.numeric(as.character(df[i,j]))
index <- which(unames == as.character(df[i,1]) )
df2[index, j-1] = df2[index, j-1] + value
}
}
row.names(df2) <- unames
colnames(df2) <- names(df)[2:ncol(df)]
#compute the chi-square statistics
chi_res <- chi_test(df2, nums)
#xx <- table(as.character(df[,1]))
for(i in 1:nrow(df2)){
df2[i,] <- df2[i,]/nums[i]
}
df2 <- t(df2)
df2 <- cbind(df2, chi_res)
#df2 <- cbind(df2, c(1:32))
#df2[,3] <- abs( df2[,1] - df2[,2] )
df2 <- df2[order(df2[,ncol(df2)], decreasing = TRUE),]
df2 <- as.data.frame(df2)
df2$symptom <- row.names(df2)
df2 <- df2[df2$chi_res <= 0.05,]
df3 <- reshape(df2, direction = "long", varying = list(1:length(nums) ),
idvar = names(df2)[ncol(df2)], timevar = label,
times=names(df2)[ c(1:length(nums)) ], v.names = "percentage" )
df3$symptom <- factor(df3$symptom, levels = unique(df3$symptom))
pic <- ggplot(data=df3, aes(x=symptom, y=percentage, fill=factor(df3[,3]), )) +
geom_bar(position="dodge",stat="identity") +
coord_flip() +
ggtitle( paste("","symptoms percentage") ) +
theme_bw() +
scale_x_discrete(
limits=unique(df2$symptom),
labels=unique(df2$symptom)
)  +
scale_fill_discrete(
name=label,
labels= names(df2)[c(1:length(nums))]
) +
theme(
#legend.position=c(.83,.3),
axis.title.y=element_blank(),
text=element_text(family="serif",size=15),
plot.title=element_text(face="bold",hjust=0.5)
)
return(list(pic, df2))
}
live_tp_df <- kenya1[,-c(1,3,4,5,6)]
live_with_df <- kenya1[!is.na(kenya1$Living.With), -c(1,2,3,4,5,9)]
live_with_res <- bar_plot(live_with_df, "living_with")
grid.arrange(age_res[[1]], gender_res[[1]], country_res[[1]],  employ_res[[1]], live_with_res[[1]],live_tp_res[[1]], ncol=2)
age_res <- bar_plot(age_df, "age") #<=50 and >50
print(age_res[[1]])
gender_res <- bar_plot(gender_df, "gender") #male and female
country_res <- bar_plot(country_df, "country")
live_tp_res <- bar_plot(live_tp_df, "living_type")
employ_res <- bar_plot(employ_df, "employed")
live_with_res <- bar_plot(live_with_df, "living_with")
grid.arrange(age_res[[1]], gender_res[[1]], country_res[[1]],  employ_res[[1]], live_with_res[[1]],live_tp_res[[1]], ncol=2)
#cosine similarity between two vectors
cosine_sim <- function(vec1, vec2){
dot_prod <- sum(vec1 * vec2)
norm1 <- sqrt(sum(vec1^2))
norm2 <- sqrt(sum(vec2^2))
return(dot_prod / (norm1 * norm2))
}
## heatmap, cosine-similarity matrix for the 6 subtypes
sim_matr <- matrix(0, nrow = 6, ncol = 6)
for(i in 1:6){
vec1 <- t(all_sigs[i,])
for(j in 1:6){
vec2 <- t(all_sigs[j,])
sim <- cosine_sim(vec1, vec2)
sim_matr[i,j] = sim
}
}
row.names(sim_matr) <- subtypes
colnames(sim_matr) <- subtypes
heatmap(sim_matr, keep.dendro = FALSE, Rowv=NA, Colv = NA, margin=c(10,10))
write.csv(as.data.frame(sim_matr),"6_age_gender_subgroup.csv", quote = FALSE)
## use a subset of features to optimize the number of groups:
#first kenya2: freq > 5%
set.seed("2022112602")
wss <- sapply(1:15, function(k){
sum(kmodes(kenya2[,-c(1:4)], k, iter.max = 100, weighted = TRUE)$withindiff)
})
wss <- sapply(1:15, function(k){
sum(kmodes(kenya2[,-c(1:6)], k, iter.max = 100, weighted = TRUE)$withindiff)
})
plot(1:15, wss, type="b", pch = 19, frame = FALSE,
xlab="Number of clusters K",
ylab="Total within-clusters sum of squares" )
## PLAN of next-step-work:
# now it seems ten clusters are good (a good kink point)
#weighted: whether the features is weighted by its frequency
result <- kmodes(kenya2[,-c(1:6)], 7, iter.max = 100, weighted = TRUE) #
print(result)
result$cluster
## checking the overlapping:
subtypes2 <- unique(as.character(dff$Age))
clus_matr <- matrix(0, nrow=7, ncol=3)
#result$cluster
for(i in 1:nrow(kenya2)){
cluster <- result$cluster[i]
col <- which(subtypes2 == dff$Age[i])
clus_matr[cluster,col] = clus_matr[cluster,col] + 1
}
colnames(clus_matr) <- subtypes2
View(clus_matr)
## PLAN of next-step-work:
# now it seems ten clusters are good (a good kink point)
#weighted: whether the features is weighted by its frequency
result <- kmodes(kenya2[,-c(1:6)], 11, iter.max = 100, weighted = TRUE) #
print(result)
## checking the overlapping:
subtypes2 <- unique(as.character(dff$Age))
clus_matr <- matrix(0, nrow=11, ncol=3)
#result$cluster
for(i in 1:nrow(kenya2)){
cluster <- result$cluster[i]
col <- which(subtypes2 == dff$Age[i])
clus_matr[cluster,col] = clus_matr[cluster,col] + 1
}
colnames(clus_matr) <- subtypes2
# report cluster size; cluster modes; and maybe within-cluster distance
write.csv(as.data.frame(result$modes),"7clusters_modes.csv", quote = FALSE)
write.csv(as.data.frame(clus_matr),"7clusters_age_group.csv", quote = FALSE)
## use use fewer clusters, visualize?
result <- kmodes(kenya3[-c(1:6)], 2, iter.max = 200, weighted = TRUE) #or true??
print(result)
result$cluster
write.csv(age_res[[2]],"age_significant_features_chisqrt.csv", quote = FALSE)
df2 <- df2[order(df2[,ncol(df2)-1], decreasing = FALSE),]
bar_plot <- function(df, label){
#df <- age_df
unames <- unique(as.character(df[,1]))
nums <- vector(mode="numeric")
for(i in 1:length(unames)){
nums <- append(nums, length(which(df[,1]==unames[i])))
}
df2 <- matrix(0, nrow=length(unames), ncol=ncol(df)-1)
for(i in 1:nrow(df)){
for(j in 2:ncol(df)){
value <- as.numeric(as.character(df[i,j]))
index <- which(unames == as.character(df[i,1]) )
df2[index, j-1] = df2[index, j-1] + value
}
}
row.names(df2) <- unames
colnames(df2) <- names(df)[2:ncol(df)]
#compute the chi-square statistics
chi_res <- chi_test(df2, nums)
#xx <- table(as.character(df[,1]))
for(i in 1:nrow(df2)){
df2[i,] <- df2[i,]/nums[i]
}
df2 <- t(df2)
df2 <- cbind(df2, chi_res)
#df2 <- cbind(df2, c(1:32))
#df2[,3] <- abs( df2[,1] - df2[,2] )
df2 <- df2[order(df2[,ncol(df2)], decreasing = TRUE),]
df2 <- as.data.frame(df2)
df2$symptom <- row.names(df2)
df2 <- df2[df2$chi_res <= 0.05,]
df3 <- reshape(df2, direction = "long", varying = list(1:length(nums) ),
idvar = names(df2)[ncol(df2)], timevar = label,
times=names(df2)[ c(1:length(nums)) ], v.names = "percentage" )
df3$symptom <- factor(df3$symptom, levels = unique(df3$symptom))
pic <- ggplot(data=df3, aes(x=symptom, y=percentage, fill=factor(df3[,3]), )) +
geom_bar(position="dodge",stat="identity") +
coord_flip() +
ggtitle( paste("","symptoms percentage") ) +
theme_bw() +
scale_x_discrete(
limits=unique(df2$symptom),
labels=unique(df2$symptom)
)  +
scale_fill_discrete(
name=label,
labels= names(df2)[c(1:length(nums))]
) +
theme(
#legend.position=c(.83,.3),
axis.title.y=element_blank(),
text=element_text(family="serif",size=15),
plot.title=element_text(face="bold",hjust=0.5)
)
df2 <- df2[order(df2[,ncol(df2)-1], decreasing = FALSE),]
return(list(pic, df2[,]))
}
age_res <- bar_plot(age_df, "age") #<=50 and >50
#print(age_res[[1]])
gender_res <- bar_plot(gender_df, "gender") #male and female
country_res <- bar_plot(country_df, "country")
live_tp_res <- bar_plot(live_tp_df, "living_type")
employ_res <- bar_plot(employ_df, "employed")
live_with_res <- bar_plot(live_with_df, "living_with")
write.csv(age_res[[2]],"age_significant_features_chisqrt.csv", quote = FALSE)
bar_plot <- function(df, label){
#df <- age_df
unames <- unique(as.character(df[,1]))
nums <- vector(mode="numeric")
for(i in 1:length(unames)){
nums <- append(nums, length(which(df[,1]==unames[i])))
}
df2 <- matrix(0, nrow=length(unames), ncol=ncol(df)-1)
for(i in 1:nrow(df)){
for(j in 2:ncol(df)){
value <- as.numeric(as.character(df[i,j]))
index <- which(unames == as.character(df[i,1]) )
df2[index, j-1] = df2[index, j-1] + value
}
}
row.names(df2) <- unames
colnames(df2) <- names(df)[2:ncol(df)]
#compute the chi-square statistics
chi_res <- chi_test(df2, nums)
#xx <- table(as.character(df[,1]))
for(i in 1:nrow(df2)){
df2[i,] <- df2[i,]/nums[i]
}
df2 <- t(df2)
df2 <- cbind(df2, chi_res)
#df2 <- cbind(df2, c(1:32))
#df2[,3] <- abs( df2[,1] - df2[,2] )
df2 <- df2[order(df2[,ncol(df2)], decreasing = TRUE),]
df2 <- as.data.frame(df2)
df2$symptom <- row.names(df2)
df2 <- df2[df2$chi_res <= 0.05,]
df3 <- reshape(df2, direction = "long", varying = list(1:length(nums) ),
idvar = names(df2)[ncol(df2)], timevar = label,
times=names(df2)[ c(1:length(nums)) ], v.names = "percentage" )
df3$symptom <- factor(df3$symptom, levels = unique(df3$symptom))
pic <- ggplot(data=df3, aes(x=symptom, y=percentage, fill=factor(df3[,3]), )) +
geom_bar(position="dodge",stat="identity") +
coord_flip() +
ggtitle( paste("","symptoms percentage") ) +
theme_bw() +
scale_x_discrete(
limits=unique(df2$symptom),
labels=unique(df2$symptom)
)  +
scale_fill_discrete(
name=label,
labels= names(df2)[c(1:length(nums))]
) +
theme(
#legend.position=c(.83,.3),
axis.title.y=element_blank(),
text=element_text(family="serif",size=15),
plot.title=element_text(face="bold",hjust=0.5)
)
df2 <- df2[order(df2[,ncol(df2)-1], decreasing = FALSE),]
write.csv(df2, paste(label,"significant_features_chisqrt.csv", sep=""), quote = FALSE)
return(list(pic, df2))
}
age_res <- bar_plot(age_df, "age") #<=50 and >50
#print(age_res[[1]])
gender_res <- bar_plot(gender_df, "gender") #male and female
country_res <- bar_plot(country_df, "country")
live_tp_res <- bar_plot(live_tp_df, "living_type")
employ_res <- bar_plot(employ_df, "employed")
live_with_res <- bar_plot(live_with_df, "living_with")
bar_plot <- function(df, label){
#df <- age_df
unames <- unique(as.character(df[,1]))
nums <- vector(mode="numeric")
for(i in 1:length(unames)){
nums <- append(nums, length(which(df[,1]==unames[i])))
}
df2 <- matrix(0, nrow=length(unames), ncol=ncol(df)-1)
for(i in 1:nrow(df)){
for(j in 2:ncol(df)){
value <- as.numeric(as.character(df[i,j]))
index <- which(unames == as.character(df[i,1]) )
df2[index, j-1] = df2[index, j-1] + value
}
}
row.names(df2) <- unames
colnames(df2) <- names(df)[2:ncol(df)]
#compute the chi-square statistics
chi_res <- chi_test(df2, nums)
#xx <- table(as.character(df[,1]))
for(i in 1:nrow(df2)){
df2[i,] <- df2[i,]/nums[i]
}
df2 <- t(df2)
df2 <- cbind(df2, chi_res)
#df2 <- cbind(df2, c(1:32))
#df2[,3] <- abs( df2[,1] - df2[,2] )
df2 <- df2[order(df2[,ncol(df2)], decreasing = TRUE),]
df2 <- as.data.frame(df2)
df2$symptom <- row.names(df2)
df2 <- df2[df2$chi_res <= 0.05,]
df3 <- reshape(df2, direction = "long", varying = list(1:length(nums) ),
idvar = names(df2)[ncol(df2)], timevar = label,
times=names(df2)[ c(1:length(nums)) ], v.names = "percentage" )
df3$symptom <- factor(df3$symptom, levels = unique(df3$symptom))
pic <- ggplot(data=df3, aes(x=symptom, y=percentage, fill=factor(df3[,3]), )) +
geom_bar(position="dodge",stat="identity") +
coord_flip() +
ggtitle( paste("","symptoms percentage") ) +
theme_bw() +
scale_x_discrete(
limits=unique(df2$symptom),
labels=unique(df2$symptom)
)  +
scale_fill_discrete(
name=label,
labels= names(df2)[c(1:length(nums))]
) +
theme(
#legend.position=c(.83,.3),
axis.title.y=element_blank(),
text=element_text(family="serif",size=15),
plot.title=element_text(face="bold",hjust=0.5)
)
df2 <- df2[order(df2[,ncol(df2)-1], decreasing = FALSE),]
write.csv(df2, paste(label,"significant_features_chisqrt.csv", sep="_"), quote = FALSE)
return(list(pic, df2))
}
age_res <- bar_plot(age_df, "age") #<=50 and >50
#print(age_res[[1]])
gender_res <- bar_plot(gender_df, "gender") #male and female
country_res <- bar_plot(country_df, "country")
live_tp_res <- bar_plot(live_tp_df, "living_type")
employ_res <- bar_plot(employ_df, "employed")
live_with_res <- bar_plot(live_with_df, "living_with")
